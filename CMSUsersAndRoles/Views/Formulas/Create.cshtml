@model CMSUsersAndRoles.Models.Formula

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@Scripts.Render("~/Scripts/jquery.unobtrusive-ajax.min.js")
<h2>Create</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Formula</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.SKU, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SKU, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SKU, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>
        <div style="margin-left:130px;"><p><b>Item Name&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;        Amount&emsp;&emsp;&emsp;          Unit of Measure</b></p></div>
        <div class="form-group">
            @Html.LabelFor(model => model.Ingredients, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10" id="Ingredients">
                @for (int i = 0; i < Model.Ingredients.Count; i++)
                {
                   @Html.EditorFor(model => model.Ingredients[i].Name, new { htmlAttributes = new { @class = "form-control" } })
                   @Html.EditorFor(model => model.Ingredients[i].Amount, new { htmlAttributes = new { @class = "form-control" } })
                   @Html.EditorFor(model => model.Ingredients[i].UnitOfMeasure, new { htmlAttributes = new { @class = "form-control" } })
                   @Html.ValidationMessageFor(model => model.Ingredients, "", new { @class = "text-danger" })
                }
               @Ajax.ActionLink("Add ingredient", "AddIngredient", "Formulas", new { ingredientId = Model.Ingredients.Count, productId = Model.ProductId }, new AjaxOptions {
               UpdateTargetId = "Ingredients", InsertionMode = InsertionMode.InsertAfter
               })
                @*@Ajax.ActionLink("Add ingredient", "AddIngredient", "Formulas", new AjaxOptions {
                UpdateTargetId = "Ingredients", InsertionMode = InsertionMode.InsertAfter
                })*@
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Instructions, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.TextAreaFor(model => model.Instructions, new { htmlAttributes = new { @class = "form-control", @cols = 120, @rows = 10 } })*@
                @*@Html.TextAreaFor(model => model.Instructions, new { @class = "form-control", cols = 80, rows = 10 } )*@
                @Html.TextAreaFor(model => model.Instructions, 15, 80, htmlAttributes: new { style = "width: 80%; max-width: 100%;" })
                @Html.ValidationMessageFor(model => model.Instructions, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
