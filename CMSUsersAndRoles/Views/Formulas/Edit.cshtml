@model CMSUsersAndRoles.Models.Formula

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}



@Scripts.Render("~/Scripts/jquery.unobtrusive-ajax.min.js")
<script type="text/javascript">
    function RemoveRow() {
        var $tr = $(this).closest('.row');
        $tr.remove();
    }
</script>
<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Formula</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ProductId)

        <div class="form-group">
            @Html.LabelFor(model => model.SKU, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.SKU, new Dictionary<string, object> { { "readonly", true } })
                @*@Html.EditorFor(model => model.SKU, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.ValidationMessageFor(model => model.SKU, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.Name, new Dictionary<string, object> { { "readonly", true } })
                @*@Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>
        <br />
     
       
        <div class="ingredhead"><p><b>Item Name&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&nbsp;&nbsp;       Amount&emsp;&emsp;&emsp;          Unit of Measure</b></p></div>
        <div class="form-group">
            @Html.LabelFor(model => model.Ingredients, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10" id="Ingredients">
                <div id="row" class="row">
                   <span class="text-danger">@ViewBag.Error</span>
                    @foreach (var item in Model.Ingredients)
                    {
                        @Html.Partial("EditIngredients", item)                 
                    }
                   
                </div>
                

                @Ajax.ActionLink("Add ingredient", "AddIngredient", "Formulas", new { productId = Model.ProductId, ingredientId = (Model.Ingredients.Count + 1), ingredients = @ViewData["ingredients"] }, new AjaxOptions
               {
                   UpdateTargetId = "Ingredients",
                   InsertionMode = InsertionMode.InsertBefore
               })

               <p>&nbsp;</p>
            </div>


                <div class="form-group" style="margin-top: 30px; margin-left: 1px">
                    @Html.LabelFor(model => model.Instructions, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextAreaFor(model => model.Instructions, 15, 80, htmlAttributes: new { @class = "instructions" })
                        @Html.ValidationMessageFor(model => model.Instructions, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Save" class="btn btn-default" />
                    </div>
                </div>
            </div>
        </div>
        }

        <div>
            @Html.ActionLink("Back to List", "Index")
        </div>

        @section Scripts {
            @Scripts.Render("~/bundles/jqueryval")
        }
